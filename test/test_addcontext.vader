# test changing context
Given (sample text):
  foo
  foo
  foo
  bar
  foo
  foo
  foo
  foo
  foo
  foo
  bar
  bar
  bar
  foo
  foo
  foo

Before(create basic folding):
  call foldsearch#foldsearch#FoldPattern("bar")

After(clear context):
  call foldsearch#foldsearch#FoldContext("0")
  redraw " clear 'echo' messages by forced redraw

Execute (fold with no context):
  call foldsearch#foldsearch#FoldContext("0")

Then (check expected folds):
  let expected = [1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1]
  let actual = map(range(1, line("$")), 'foldclosed(v:val) > 0')
  AssertEqual actual, expected

Execute (fold with incremented context):
  call foldsearch#foldsearch#FoldContextAdd("2")

Then (check expected folds):
  let expected = [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]
  let actual = map(range(1, line("$")), 'foldclosed(v:val) > 0')
  AssertEqual actual, expected

Execute (fold double incremented context):
  call foldsearch#foldsearch#FoldContextAdd("1")
  call foldsearch#foldsearch#FoldContextAdd("1")

Then (check expected folds):
  let expected = [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]
  let actual = map(range(1, line("$")), 'foldclosed(v:val) > 0')
  AssertEqual actual, expected

Execute (fold increment/decrement context combinations):
  call foldsearch#foldsearch#FoldContextAdd("2")
  call foldsearch#foldsearch#FoldContextAdd("-1")
  call foldsearch#foldsearch#FoldContextAdd("1")

Then (check expected folds):
  let expected = [1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1]
  let actual = map(range(1, line("$")), 'foldclosed(v:val) > 0')
  AssertEqual actual, expected
